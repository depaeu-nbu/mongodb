<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- 开启注解 -->
    <mvc:annotation-driven/>

    <!-- 注解扫描包 -->
    <context:component-scan base-package="com.junglone.controller"/>

    <!-- 静态资源访问 -->
    <mvc:default-servlet-handler/>

    <!-- 定义视图分解器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
        <!--&lt;!&ndash;限制大小2M&ndash;&gt;-->
        <!--<property name="maxUploadSize" value="2048000"/>-->
        <!--&lt;!&ndash;一个类似懒加载的属性.可以定义该属性.让解析文件的时候再抛异常,然后Controller中定义异常处理的方法&ndash;&gt;-->
        <!--<property name="resolveLazily" value="true"/>-->
    <!--</bean>-->

    <!--MVC 拦截器配置-->
    <mvc:interceptors>
        <!--拦截直接访问页面的请求-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.junglone.interceptor.BaseInterceptor"></bean>
        </mvc:interceptor>
        <!--用户登录状态判断-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.junglone.interceptor.LoginStatusInterceptor"/>
        </mvc:interceptor>

        <!--Cookie超时-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.junglone.interceptor.CookieInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>